---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// ÁµåÊ≠¥„Éá„Éº„Çø„ÇíÂèñÂæó„Åó„Å¶„ÇΩ„Éº„Éà
const allExperience = await getCollection('experience');
const sortedExperience = allExperience.sort((a, b) => {
  const dateA = new Date(a.data.startDate).getTime();
  const dateB = new Date(b.data.startDate).getTime();
  if (dateA === dateB) {
    return (b.data.priority || 0) - (a.data.priority || 0);
  }
  return dateB - dateA;
});
---

<BaseLayout 
  title="Experience & Learning" 
  description="„Åì„Çå„Åæ„Åß„ÅÆÁµåÊ≠¥„ÉªÂ≠¶ÁøíÂ±•Ê≠¥„Å´„Å§„ÅÑ„Å¶Á¥π‰ªã„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ"
>
  <div class="experience-container">
    <header class="page-header">
      <h1>Experience & Learning</h1>
      <p class="page-subtitle">ÁµåÊ≠¥„ÉªÂ≠¶ÁøíÂ±•Ê≠¥</p>
    </header>
    
    <!-- ÁµåÊ≠¥„Çø„Ç§„É†„É©„Ç§„É≥ -->
    <section class="experience-timeline">
      {sortedExperience.map(async (exp) => {
        const { Content } = await exp.render();
        const startDate = exp.data.startDate.toLocaleDateString('ja-JP', { year: 'numeric', month: 'long' });
        const endDate = exp.data.current ? 'ÁèæÂú®' : 
          exp.data.endDate?.toLocaleDateString('ja-JP', { year: 'numeric', month: 'long' }) || '';
        
        return (
          <article class="experience-item">
            <div class="experience-meta">
              <div class="experience-period">
                {startDate}ÔΩû{endDate}
              </div>
              <div class="experience-org">{exp.data.organization}</div>
            </div>
            <div class="experience-content">
              <h2 class="experience-title">{exp.data.title}</h2>
              <p class="experience-description">{exp.data.description}</p>
              
              {exp.data.skills && exp.data.skills.length > 0 && (
                <div class="experience-skills">
                  <h3>‰ΩøÁî®ÊäÄË°ì„Éª„Çπ„Ç≠„É´</h3>
                  <div class="skills-list">
                    {exp.data.skills.map(skill => (
                      <span class="skill-tag">{skill}</span>
                    ))}
                  </div>
                </div>
              )}
              
              <div class="experience-details">
                <Content />
              </div>
            </div>
          </article>
        );
      })}
    </section>
    
    {sortedExperience.length === 0 && (
      <div class="empty-state">
        <div class="empty-icon">üìö</div>
        <h3>ÁµåÊ≠¥ÊÉÖÂ†±„Åå„Åæ„Å†„ÅÇ„Çä„Åæ„Åõ„Çì</h3>
        <p>ËøëÊó•‰∏≠„Å´ÁµåÊ≠¥„ÉªÂ≠¶ÁøíÂ±•Ê≠¥„ÇíÂÖ¨Èñã‰∫àÂÆö„Åß„Åô„ÄÇ</p>
      </div>
    )}
  </div>
</BaseLayout>

<style>
  .experience-container {
    max-width: 1000px;
    margin: 0 auto;
  }
  
  .page-header {
    text-align: center;
    margin-bottom: 4rem;
  }
  
  .page-header h1 {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 1rem;
    color: var(--accent);
  }
  
  .page-subtitle {
    font-size: 1.125rem;
    color: var(--text-secondary);
  }
  
  /* „Çø„Ç§„É†„É©„Ç§„É≥ */
  .experience-timeline {
    position: relative;
    padding-left: 2rem;
  }
  
  .experience-timeline::before {
    content: '';
    position: absolute;
    left: 1rem;
    top: 0;
    bottom: 0;
    width: 2px;
    background: var(--border);
  }
  
  .experience-item {
    position: relative;
    margin-bottom: 3rem;
    padding-left: 2rem;
  }
  
  .experience-item::before {
    content: '';
    position: absolute;
    left: -0.5rem;
    top: 0.5rem;
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
    background: var(--accent);
    border: 3px solid var(--bg-primary);
  }
  
  .experience-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    font-size: 0.875rem;
  }
  
  .experience-period {
    color: var(--accent);
    font-weight: 600;
  }
  
  .experience-org {
    color: var(--text-secondary);
    font-style: italic;
  }
  
  .experience-content {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: 2rem;
  }
  
  .experience-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: var(--text-primary);
  }
  
  .experience-description {
    color: var(--text-secondary);
    margin-bottom: 1.5rem;
    font-size: 1.125rem;
  }
  
  .experience-skills {
    margin: 2rem 0;
  }
  
  .experience-skills h3 {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: var(--text-primary);
  }
  
  .skills-list {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }
  
  .skill-tag {
    background: rgba(138, 180, 248, 0.1);
    color: var(--accent);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 500;
  }
  
  .experience-details {
    color: var(--text-primary);
    line-height: 1.8;
  }
  
  /* Markdown„Çπ„Çø„Ç§„É´ */
  .experience-details :global(h1),
  .experience-details :global(h2),
  .experience-details :global(h3) {
    margin: 1.5rem 0 1rem 0;
    font-weight: 600;
    color: var(--text-primary);
  }
  
  .experience-details :global(h2) { font-size: 1.25rem; }
  .experience-details :global(h3) { font-size: 1.125rem; }
  
  .experience-details :global(p) {
    margin: 1rem 0;
  }
  
  .experience-details :global(ul),
  .experience-details :global(ol) {
    margin: 1rem 0;
    padding-left: 2rem;
  }
  
  .experience-details :global(li) {
    margin: 0.5rem 0;
  }
  
  /* Á©∫„ÅÆÁä∂ÊÖã */
  .empty-state {
    text-align: center;
    padding: 4rem 2rem;
    border: 2px dashed var(--border);
    border-radius: 12px;
    margin: 2rem 0;
  }
  
  .empty-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }
  
  .empty-state h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: var(--text-primary);
  }
  
  .empty-state p {
    color: var(--text-secondary);
    font-size: 1.125rem;
  }
  
  /* „É¨„Çπ„Éù„É≥„Ç∑„Éñ */
  @media (max-width: 768px) {
    .page-header h1 {
      font-size: 2rem;
    }
    
    .experience-timeline {
      padding-left: 1rem;
    }
    
    .experience-timeline::before {
      left: 0.5rem;
    }
    
    .experience-item {
      padding-left: 1.5rem;
    }
    
    .experience-item::before {
      left: -0.25rem;
      width: 0.75rem;
      height: 0.75rem;
    }
    
    .experience-content {
      padding: 1.5rem;
    }
    
    .experience-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
    
    .skills-list {
      gap: 0.5rem;
    }
    
    .skill-tag {
      font-size: 0.8rem;
      padding: 0.4rem 0.8rem;
    }
  }
</style>